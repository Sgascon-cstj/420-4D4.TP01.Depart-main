# ------------------------------------------------
# Projet:   TP01
# Cours:    420-4D4
# Fichier:  docker-compose.yml - version de départ
# Auteur:   
# Date:     
# ------------------------------------------------
# Description:
# ------------------------------------------------
# M-A-J:
version: "3"
services:
  # ===========================================
  # Le serveur de bases de données mariaDB
  # # Service disponible sur le port 3307
  # ===========================================
  mabd:
    image: mariadb
    ports:
      - ${DB_PORT}:3306
    environment:
      - MARIADB_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} 
      - MARIADB_DATABASE=${MYSQL_DATABASE} 
      - MARIADB_USER=${MYSQL_USER} 
      - MARIADB_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./bdwp:/var/lib/mysql
    networks:
      - reseauWP
#    command: top      
  # <-------------------------------------- FIN

  
  
  # ==============================================
  # Construction et démarrage du serveur Web,
  # à partir des fichiers du dossier 'contenu-web'
  # # Service disponible sur le port 80
  # ==============================================
  serveurweb:
    image: nginx/samuelgascon
    container_name: serveurWEB
    build: ./contenu-web
    ports:
      - "80:80"
    networks:
      - reseauWP

  # <-------------------------------------- FIN



  # ===========================================
  # Construction et démarrage de WordPress
  # Service disponible sur le port 88
  # ===========================================
  wordpress:
    image: samuelgascon/wp_perso
    build: ./wordpress
    ports:
      - 88:80
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WP_DB_NAME}
      - WORDPRESS_TABLE_PREFIX=${WP_PREFIX}
    networks:
      - reseauWP
    depends_on:
      - mabd
        
    # Exemple d'utilisation des variables du fichier .env
    #    environment:
    #      - WORDPRESS_DB_HOST=${WP_HOST}
    #      - WORDPRESS_DB_USER=${WP_USER}
    #      - WORDPRESS_DB_PASSWORD=${WP_PASSWORD}
    #      - WORDPRESS_DB_NAME=${WP_DB_NAME}


  # <-------------------------------------- FIN



  # ---- ZONE postgres + PMM
  # ===========================================
  # Le serveur d'activités percona PMM
  # Service disponible sur le port 83
  # ===========================================
  pmm-server:
    image: percona/pmm-server:2
    ports:
      - 83:80
    container_name: pmm_server
    volumes:
      - ./pmm-data:/srv
    depends_on:
      - postgres  
  # <-------------------------------------- FIN

  # ===========================================
  # Le serveur de base de données postgres
  # Service disponible sur le port 5432
  # ===========================================
  
  postgres:
    image: postgres
    restart: always
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - reseauPMM  
    # <-------------------------------------- FIN

  
  
  # ===========================================
  # Démarrage de postgresAdmin
  # Service disponible sur le port 81
  # ===========================================
  pg-admin:
    image: dpage/pgadmin4
    ports:
      - 81:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - reseauPMM  

  # <-------------------------------------- FIN



  # ================================================
  # Le client PMM pour la base de données postgress
  # ATTENTION:  Cette solution ne fonctionne pas!!!
  # À vous de trouver la bonne solution ...+
  # ================================================
  pmm-client-postgres:
    image: "perconalab/pmm-client:dev-latest"
    container_name: pmm-client-postgres
    volumes:
      - ./pmm-client-data:/srv
    environment:  
      - PMM_SERVER=pmm-server:443
      - PMM_USER=${PMM_USER}
      - PMM_PASSWORD=${PMM_PASSWORD}
      - DB_TYPE=postgresql
      - DB_HOST=postgres
      - DB_PORT=${POSTGRES_PORT}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - reseauPMM
  
  # <-------------------------------------- FIN



  # ===========================================
  # Démarrage de phpMyAdmin
  # Service disponible sur le port 82
  # ===========================================
    # NOTE: Il ne faut pas utiliser la méthode: PMA_ARBITRARY=1
  phpmyadmin:
    image: phpmyadmin
    networks: 
        - reseauWP       
    ports:
      - "82:80"
    environment:
      - PMA_HOST=mabd
      - PMA_PORT=3306
    depends_on:
      - mabd

  # <-------------------------------------- FIN



# ===========================================
# Les réseaux de l'application
# ===========================================
networks:
  reseauWP:
    name: reseauWP
    driver: bridge
  reseauPMM:
    name: reseauPMM
    driver: bridge

# <-------------------------------------- FIN
